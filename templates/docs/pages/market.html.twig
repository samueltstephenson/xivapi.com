{% extends "docs/index.html.twig"  %}
{% import "docs/macros.html.twig" as docs %}
{% set section = 14 %}

{% block doc %}

    <h1>Market</h1>

    <p>Get in-game market board information for any server, at any time.</p>
    <p>
        If you need any help, please hop on <strong>Discord</strong>:
        <a href="https://discord.gg/MFFVHWC">https://discord.gg/MFFVHWC</a>
    </p>
    <p>
        <a href="http://xivapi.com/docs/Market#section-5">View Server Status</a>
    </p>

    <br>

    <h6>Notice of usage</h6>

    <p class="note">
        <strong>**DO NOT DO IT**</strong> - Are you thinking of scraping the entire market? Just don't. You can go make your own
        implementation, you can find all my stuff open source which includes the logic to connect
        to the Companion App API and you can mass scrape all you want there. If you attempt to mass
        scrape on XIVAPI side at this time your key will be deleted, continuous abuse will mean a ban on
        your account. Please consider what you actually need and come into the discord to talk to
        one of the developers who can guide you into making things much more efficient.
    </p>

    <p class="note">
        <strong>**SLOW**</strong> - The Companion API is not fast and will take 1-2 seconds to response so please consider
        this when building your apps. The cache on XIVAPI is set to 300 seconds for all Companion
        API calls. It is not know what kind of caching SE use on the app.
    </p>

    <p class="note">
        <strong>**SERVERS**</strong> - Most servers are supported, however some servers are congested which is preventing
        new characters from being created. We are trying our best to get a character made!
    </p>

    {{ docs.gap() }}

    {# GET #}
    {{ docs.api('/market/[server]/items/[item_id]', '/market/phoenix/items/5', 'prices') }}
    <p>
        A list of prices for an item on a specific server.
    </p>
    <p>
        (response info)
    </p>

    {{ docs.gap() }}

    {# History #}
    {{ docs.api('/market/[server]/items/[item_id]/history', '/market/phoenix/items/5/history', 'history') }}
    <p>
        Get the price history for an item on a specific server.
    </p>
    <p>
        (response info)
    </p>

    {{ docs.gap() }}

    {# Category stock #}
    {{ docs.api('/market/[server]/category/[category_id]', '/market/phoenix/category/10', 'stock') }}
    <p>
        Get the list of items and their sale quantity in this category.
    </p>
    <p>
        (response info)
    </p>

    {{ docs.gap() }}

    {# Market Categories #}
    {{ docs.api('/market/categories', '/market/categories', 'categories') }}
    <p>
        Get a list of market categories, this is the ID used in the endpoint:
        `/market/[server]/category/[category_id]`
    </p>

    <hr>

    {# Server Status #}
    <h4 id="status">Market Server Status</h4>
    <p>
        Below is a table of each server and their market accessibility status. If your server is
        "offline" it may mean that the server is congested and new characters cannot be made or the
        companion API is having issues accessing the Data Center where the server is based.
    </p>

    <p>At this time the following servers are not supported due to world congestion: {{ server_unsupported|join(', ', ' and ') }}</p>

    <table class="param-table">
        <thead>
        <tr>
            <th width="20%">Server</th>
            <th>Status</th>
        </tr>
        </thead>
        <tbody>
        {% for token in server_tokens %}
            <tr>
                <td>{{ token.server }}</td>
                <td>{{ token.online ? 'Market Online' : 'OFFLINE' }}</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

{% endblock %}
